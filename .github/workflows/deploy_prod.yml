name: Deploy sendme frontend

on:
  push:
    branches: [design/adjusting-space]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      FRONTEND_PATH: /var/www/vhosts/sendme123.com/new.sendme123.com
      SERVER_HOST: ${{ secrets.IP }}
      SERVER_USER: ${{ secrets.USER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Install deps
        run: |
          if [ -f yarn.lock ]; then
            corepack enable
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: |
          if [ -f yarn.lock ]; then
            yarn build
          else
            npm run build
          fi
        env:
          NODE_ENV: production

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Stamp build version
        run: |
          mkdir -p dist
          echo "${GITHUB_SHA::7} $(date -u +%FT%TZ)" > dist/version.txt

      - name: Package dist
        run: tar -C dist -czf dist.tgz .

      - name: Upload dist.tgz to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          source: dist.tgz
          target: /tmp/

      - name: Deploy (copy to target)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: |
            set -euo pipefail
            BASE="${{ env.FRONTEND_PATH }}"
            mkdir -p "$BASE"
            rm -rf "$BASE"/*   # limpia destino
            tar -C "$BASE" -xzf /tmp/dist.tgz
            rm -f /tmp/dist.tgz
            test -f "$BASE/index.html" || { echo "Falta index.html"; exit 1; }
