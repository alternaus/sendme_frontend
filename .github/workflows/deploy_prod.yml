name: Deploy sendme frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint-and-test:
    name: 🧪 Lint y Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - name: 📦 Instalar dependencias
        run: npm ci
      - name: 🔍 Lint
        run: npm run lint

  build:
    name: 🔨 Build
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - name: 📦 Instalar dependencias
        run: npm ci
      - name: 📦 Build Vue App
        run: |
          npm run build
      - name: 📂 Subir artefacto
        uses: actions/upload-artifact@v3
        with:
          name: vue-dist
          path: dist

  deploy:
    name: 🚀 Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Descargar artefacto
        uses: actions/download-artifact@v3
        with:
          name: vue-dist
          path: dist

      - name: 🔐 Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 📂 Sync build to server
        run: |
          rsync -avz --delete dist/ \
            ${{ secrets.USER }}@${{ secrets.IP }}:${{ env.FRONTEND_PATH }}

      - name: 📄 Upload Nginx config
        run: |
          rsync -avz nginx/sendme123.conf \
            ${{ secrets.USER }}@${{ secrets.IP }}:/tmp/sendme123.conf

      - name: 🛠️ Remote server setup (Nginx & SSL)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -eux

            # Verificar o instalar Nginx
            if ! command -v nginx >/dev/null; then
              apt-get update
              apt-get install -y nginx
            fi

            # Limpiar sites-available y sites-enabled previos
            rm -f /etc/nginx/sites-enabled/*
            rm -f /etc/nginx/sites-available/*

            # Desplegar nueva configuración
            mv /tmp/sendme123.conf /etc/nginx/sites-available/sendme123.conf
            ln -s /etc/nginx/sites-available/sendme123.conf /etc/nginx/sites-enabled/sendme123.conf

            # Probar y recargar Nginx
            nginx -t
            systemctl reload nginx

            # Instalar Certbot si no existe
            if ! command -v certbot >/dev/null; then
              apt-get install -y certbot python3-certbot-nginx
            fi

            # Obtener o renovar certificado
            if [ ! -d "/etc/letsencrypt/live/new.sendme123.com" ]; then
              certbot --nginx -d new.sendme123.com --non-interactive --agree-tos -m admin@sendme123.com
            else
              certbot renew --quiet --post-hook "systemctl reload nginx"
            fi

            # Configurar renovación automática si no existe en crontab
            (crontab -l | grep -q "certbot renew") || \
              echo "0 3 * * * certbot renew --quiet --post-hook 'systemctl reload nginx'" >> /etc/crontab

      - name: 🔔 Notificar despliegue
        if: success()
        run: echo "✅ Deploy completado en new.sendme123.com"

      - name: ⚠️ Rollback on failure
        if: failure()
        run: echo "❌ Deploy fallido — revisa los logs"
